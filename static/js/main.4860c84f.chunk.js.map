{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/helpers.js","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","changeHandler","value","target","valueNumber","Number","setState","clickHandler","props","toastManager","onDeposit","onWithdraw","dataset","add","appearance","autoDismiss","name","this","controls","styles","className","type","onChange","data-name","onClick","Component","withToastManager","Balance","balance","income","expenses","balanceStyle","incomeStyle","expensesStyle","thousandsSeparator","num","numParts","toString","split","replace","join","TransactionHistory","items","history","historyBodyItem","historyHeadItem","map","item","id","date","withFixedPoint","toFixed","key","Dashboard","transactions","prevState","addTransaction","transaction","shortId","Date","toLocaleString","handleSum","sum","reduce","acc","unit","localStorage","JSON","parse","getItem","Object","keys","forEach","setItem","stringify","dashboard","fixedPointBalance","length","App","placement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4860c84f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceStyle\":\"Balance_balanceStyle__2IW8F\",\"incomeStyle\":\"Balance_incomeStyle__2nD8Y\",\"expensesStyle\":\"Balance_expensesStyle__3ykgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__35O5m\",\"historyHeadItem\":\"TransactionHistory_historyHeadItem__1C7CR\",\"historyBodyItem\":\"TransactionHistory_historyBodyItem__23QX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3oRCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1CS_X\"};","/* eslint-disable react/state-in-constructor */\r\nimport React, { Component } from 'react';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\nclass Controls extends Component {\r\n  state = { amount: '' };\r\n\r\n  changeHandler = ({ target }) => {\r\n    const { value } = target;\r\n    const valueNumber = Number(value);\r\n    this.setState({\r\n      amount: valueNumber,\r\n    });\r\n  };\r\n\r\n  clickHandler = ({ target }) => {\r\n    const { toastManager, onDeposit, onWithdraw } = this.props;\r\n    const { dataset } = target;\r\n    const { amount } = this.state;\r\n\r\n    if (amount <= 0) {\r\n      return toastManager.add('Введите сумму для проведения операции!', {\r\n        appearance: 'warning',\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n\r\n    if (dataset.name === 'deposit') onDeposit(amount);\r\n    if (dataset.name === 'withdraw') onWithdraw(amount);\r\n    return this.setState({ amount: '' });\r\n  };\r\n\r\n  render() {\r\n    const { amount } = this.state;\r\n    const { controls } = styles;\r\n\r\n    return (\r\n      <section className={controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={amount}\r\n          onChange={this.changeHandler}\r\n        />\r\n        <button type=\"button\" data-name=\"deposit\" onClick={this.clickHandler}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" data-name=\"withdraw\" onClick={this.clickHandler}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nControls.propTypes = {\r\n  onDeposit: PropTypes.func.isRequired,\r\n  onWithdraw: PropTypes.func.isRequired,\r\n  toastManager: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n};\r\n\r\nexport default withToastManager(Controls);\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expenses }) => {\r\n  const { balanceStyle, incomeStyle, expensesStyle } = styles;\r\n  return (\r\n    <section className={balanceStyle}>\r\n      <span className={incomeStyle}>{income}$</span>\r\n      <span className={expensesStyle}>{expenses}$</span>\r\n      <span>{`Balance: ${balance}$`}</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","const thousandsSeparator = num => {\n  const numParts = num.toString().split('.');\n  numParts[0] = numParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  return numParts.join('.');\n};\n\nexport default thousandsSeparator;\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\nimport thousandsSeparator from '../helpers';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  const { history, historyBodyItem, historyHeadItem } = styles;\r\n  return (\r\n    <table className={history}>\r\n      <thead>\r\n        <tr>\r\n          <th className={historyHeadItem}>Transaction</th>\r\n          <th className={historyHeadItem}>Amount</th>\r\n          <th className={historyHeadItem}>Date</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => {\r\n          const { id, type, amount, date } = item;\r\n          const withFixedPoint = thousandsSeparator(amount.toFixed(2));\r\n          return (\r\n            <tr key={id}>\r\n              <td className={historyBodyItem}>{type}</td>\r\n              <td className={historyBodyItem}>{withFixedPoint}$</td>\r\n              <td className={historyBodyItem}>{date}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","/* eslint-disable react/state-in-constructor */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport shortId from 'shortid';\r\nimport styles from './Dashboard.module.css';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport thousandsSeparator from '../helpers';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.transactions || localStorage.balance)\r\n      this.setState({\r\n        transactions: JSON.parse(localStorage.getItem('transactions')),\r\n        balance: JSON.parse(localStorage.getItem('balance')),\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const keys = Object.keys(this.state);\r\n    return keys.forEach(key =>\r\n      localStorage.setItem(key, JSON.stringify(this.state[key])),\r\n    );\r\n  }\r\n\r\n  onDeposit = amount => {\r\n    this.setState(prevState => ({\r\n      balance: prevState.balance + amount,\r\n    }));\r\n    this.addTransaction('deposit', amount);\r\n  };\r\n\r\n  onWithdraw = amount => {\r\n    const { balance } = this.state;\r\n    const { toastManager } = this.props;\r\n    if (balance < amount) {\r\n      return toastManager.add(\r\n        'На счету недостаточно средств для проведения операции!',\r\n        {\r\n          appearance: 'warning',\r\n          autoDismiss: true,\r\n        },\r\n      );\r\n    }\r\n    this.setState(prevState => ({\r\n      balance: prevState.balance - amount,\r\n    }));\r\n    return this.addTransaction('withdraw', amount);\r\n  };\r\n\r\n  addTransaction = (type, amount) => {\r\n    const transaction = {\r\n      id: shortId(),\r\n      type,\r\n      amount,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, transaction],\r\n    }));\r\n  };\r\n\r\n  handleSum = type => {\r\n    const { transactions } = this.state;\r\n    const sum = transactions.reduce(\r\n      (acc, unit) => acc + (unit.type === type && unit.amount),\r\n      0,\r\n    );\r\n    return thousandsSeparator(sum.toFixed(2));\r\n  };\r\n\r\n  render() {\r\n    const { balance, transactions } = this.state;\r\n    const { dashboard } = styles;\r\n    const fixedPointBalance = thousandsSeparator(balance.toFixed(2));\r\n    const income = this.handleSum('deposit');\r\n    const expenses = this.handleSum('withdraw');\r\n\r\n    return (\r\n      <div className={dashboard}>\r\n        <Controls\r\n          onDeposit={this.onDeposit}\r\n          onWithdraw={this.onWithdraw}\r\n          balance={balance}\r\n        />\r\n        <Balance\r\n          balance={fixedPointBalance}\r\n          income={income}\r\n          expenses={expenses}\r\n        />\r\n        {transactions.length > 0 && <TransactionHistory items={transactions} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  toastManager: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n};\r\n\r\nexport default withToastManager(Dashboard);\r\n","import React from 'react';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport Dashboard from './Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <ToastProvider placement=\"bottom-right\">\r\n    <Dashboard />\r\n  </ToastProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}